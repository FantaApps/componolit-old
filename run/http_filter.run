#
# Build
#

set build_components {
	core init
	drivers/timer drivers/input drivers/nic
	server/nic_bridge
	app/lighttpd
	test/lwip/http_clnt
	server/http_uplink
	server/http_downlink
	server/log_terminal
	server/nic_loopback
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="200"/>
}

append_platform_drv_config

append config {

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="lighttpd">
		<resource name="RAM" quantum="128M" />
		<config>
			<arg value="lighttpd" />
			<arg value="-f" />
			<arg value="/etc/lighttpd/lighttpd.conf" />
			<arg value="-D" />
			<vfs>
				<dir name="dev">
					<log/>
					<null/>
               <inline name="rtc">2000-01-01 00:00</inline>
				</dir>
				<dir name="etc">
					<dir name="lighttpd">
						<inline name="lighttpd.conf">
# lighttpd configuration
server.port          = 80
server.document-root = "/website"
server.event-handler = "select"
server.network-backend = "write"
index-file.names     = (
  "index.xhtml", "index.html", "index.htm"
)
mimetype.assign      = (
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html"
)
						</inline>
					</dir>
				</dir>
				<dir name="website">
					<rom name="index.html"/>
				</dir>
			</vfs>
			<libc stdin="/dev/null" stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc"
				ip_addr="10.0.3.100" netmask="255.255.255.0" gateway="0.0.0.0"/>
		</config>
		<route>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="nic_loopback">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nic"/></provides>
	</start>

	<start name="nic_bridge">
		<resource name="RAM" quantum="24M"/>
		<provides><service name="Nic"/></provides>
		<config>
			<policy label_prefix="lighttpd" ip_addr="10.0.3.100"/>
			<policy label_prefix="http_downlink" ip_addr="10.0.3.101"/>
		</config>
		<route>
			<service name="Nic"> <child name="nic_loopback"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="http_downlink">
		<resource name="RAM" quantum="16M"/>
		<provides>
			<service name="Terminal"/>
		</provides>
		<route>
			<service name="Nic"><child name="nic_bridge"/></service>
			<any-service><parent/><any-child/></any-service>
		</route>
		<config server_ip="10.0.3.100" server_port="80">
			<vfs>
				<dir name="dev">
					<log/>
					<null/>
					<inline name="rtc">2000-01-01 00:00</inline>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc"
				ip_addr="10.0.3.101" netmask="255.255.255.0" gateway="0.0.0.0"/>
		</config>
	</start>

	<start name="http_uplink">
		<resource name="RAM" quantum="12M"/>
		<route>
			<service name="Nic"><child name="nic_drv"/></service>
			<service name="Terminal"><child name="http_downlink"/></service>
			<any-service><parent/><any-child/></any-service>
		</route>

		<config>
			<vfs>
				<dir name="dev">
					<log/>
					<null/>
					<inline name="rtc">2000-01-01 00:00</inline>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc"/>
		</config>
	</start>

	<start name="nic_drv">
		<binary name="} [nic_drv_binary] {"/>
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
	</start>

	<start name="log_terminal">
		<resource name="RAM" quantum="8M"/>
		<provides>
			<service name="Terminal"/>
		</provides>
	</start>

</config>}

install_config $config

#
# Boot modules
#

# generic modules
append boot_modules {
	core init
	timer } [nic_drv_binary] {
	nic_bridge
	nic_loopback
	ld.lib.so
	libc.lib.so
	posix.lib.so
	lwip.lib.so
	test-http_clnt
	libm.lib.so
	zlib.lib.so
	lighttpd
	http_uplink
	http_downlink
	log_terminal
	index.html
}

# Copy website
exec cp ${genode_dir}/repos/componolit/demo/wind_turbine_hmi/demo.html bin/index.html

# platform-specific modules
lappend_if [have_spec linux] boot_modules fb_sdl

append_platform_drv_boot_modules

build_boot_image $boot_modules


append_if [have_spec x86]     qemu_args " -net nic,model=e1000 "
append_if [have_spec lan9118] qemu_args " -net nic,model=lan9118 "

append qemu_args " -net user -redir tcp:5555::80 "
append qemu_args " -nographic -serial mon:stdio "

run_genode_until forever
