#
# Build
#

set build_components {
	core init
	drivers/timer
	drivers/rtc
	server/vfs
	test/libziparchive
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components
build $build_components
create_boot_directory

#
# Generate config
#

install_config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="CAP"/>
		<service name="RM"/>
		<service name="PD"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="500"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="rtc_drv">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Rtc"/> </provides>
	</start>

	<start name="vfs">
		<resource name="RAM" quantum="128M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
            <vfs>
				<dir name="tmp"> <ram/> </dir>
				<tar name="testdata.tar"/>
            </vfs>
			<default-policy root="/" writeable="true" />
		</config>
	</start>

	<start name="libziparchive_test">
		<resource name="RAM" quantum="128M"/>
		<config>
			<argv progname="test_libziparchive">
				<arg value="--test_data_dir=/"/>
			</argv>
			<vfs>
				<dir name="dev">
					<log/>
					<rtc/>
					<dir name="socket"> <fs/> </dir>
				</dir>
                <fs/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" />
		</config>
	</start>
</config>}


exec tar cfv bin/testdata.tar -h -C [genode_dir]/repos/componolit/src/test/libziparchive bad_crc.zip declaredlength.zip dummy-update.zip large.zip valid.zip bad_filename.zip crash.apk

#
# Boot image
#

# generic modules
set boot_modules {
	core init ld.lib.so
	timer vfs
	libc.lib.so libm.lib.so
	vfs.lib.so
	cxxthreads.lib.so
	posix.lib.so pthread.lib.so stdcxx.lib.so
	lwip_legacy.lib.so
	liblog.lib.so libbase.lib.so libziparchive.lib.so
	libcutils.lib.so libutils.lib.so zlib.lib.so
	libbacktrace.lib.so
	libargv.lib.so
	librwall.lib.so
	rtc_drv
	libziparchive_test
	testdata.tar
}

append_platform_drv_boot_modules
build_boot_image $boot_modules

append qemu_args " -m 512 -nographic "
run_genode_until {.*child "libziparchive_test" exited with exit value 0} 100
