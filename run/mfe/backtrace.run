#
# Build
#

set build_components {
	core init
	drivers/timer
	server/ram_fs
	test/mfe/backtrace
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components
build $build_components
create_boot_directory

#
# Generate config
#

install_config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="CAP"/>
		<service name="RM"/>
		<service name="PD"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="ram_fs">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<default-policy root="/" writeable="true" />
		</config>
	</start>

	<start name="backtrace">
		<resource name="RAM" quantum="20M"/>
		<config ld_verbose="yes">
			<vfs>
				<dir name="tmp"> <fs/> </dir>
				<dir name="dev"> <log/> </dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" />
		</config>
	</start>
</config>}

#
# Boot image
#

# generic modules
set boot_modules {
	core init ld.lib.so
	timer ram_fs
	libc.lib.so libm.lib.so posix.lib.so pthread.lib.so stdcxx.lib.so
	backtrace
}

append_platform_drv_boot_modules
build_boot_image $boot_modules

append qemu_args " -m 512 -nographic "
run_genode_until {.*child "backtrace" exited with exit value 0} 1000
